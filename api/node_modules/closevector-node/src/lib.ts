import jwt from 'jsonwebtoken'; // you can also use any other JWT library, for example: jsonwebtoken
import axios, { AxiosRequestConfig } from 'axios';

export const END_POINT = "https://vector-kv.mega-ug.uk"

export enum FileVisibility {
    Public = 0,
    Private = 1
}

export const chunkArray = <T>(arr: T[], chunkSize: number) =>
    arr.reduce((chunks, elem, index) => {
        const chunkIndex = Math.floor(index / chunkSize);
        const chunk = chunks[chunkIndex] || [];
        // eslint-disable-next-line no-param-reassign
        chunks[chunkIndex] = chunk.concat([elem]);
        return chunks;
    }, [] as T[][]);

export async function encryptToken(object: Record<string, any>, secret: string): Promise<string> {
    const token = await jwt.sign(
        {
            // 1 hour from now on
            ...object,
            iat: Date.now(),
            exp: Math.floor((Date.now() + 60 * 60 * 1000) / 1000),
        },
        secret
    );
    return token;
}

export async function createUploadFileOperationUrl(options: {
    uuid?: string,
    public?: boolean,
    description: string,
    accessKey: string,
    secret: string
}) {

    const { accessKey, secret } = options;

    const config: AxiosRequestConfig = {
        method: 'POST',
        url: `${END_POINT}/file/url`,
        headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${accessKey}:${await encryptToken({ accessKey }, secret)}`,
        },
        data: {
            uuid: options.uuid,
            description: options.description,
            visibility: options.public ? FileVisibility.Public : FileVisibility.Private
        }
    };

    const response = await axios(config);

    return response.data as {
        url: string,
        uuid: string
    };
}

export async function createGetFileOperationUrl(options: {
    uuid: string,
    accessKey: string,
    secret: string
}) {

    const { accessKey, secret, uuid } = options;

    const config: AxiosRequestConfig = {
        method: 'GET',
        url: `${END_POINT}/file/url/${uuid}`,
        headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${accessKey}:${await encryptToken({ accessKey }, secret)}`,
        }
    };

    const response = await axios(config);

    return response.data as {
        url: string
    };
}
