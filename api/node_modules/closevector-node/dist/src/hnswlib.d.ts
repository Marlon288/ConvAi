import type { HierarchicalNSW as HierarchicalNSWT } from 'closevector-hnswlib-node';
import { CloseVectorEmbeddings, CloseVectorSaveableVectorStore, CloseVectorDocument, SynchronousInMemoryDocstore, CloseVectorHNSWLibBase, CloseVectorHNSWLibArgs } from 'closevector-common';
export { CloseVectorEmbeddings, CloseVectorHNSWLibArgs, CloseVectorSaveableVectorStore, CloseVectorDocument, SynchronousInMemoryDocstore, CloseVectorHNSWLibBase, CloseVectorCredentials, } from 'closevector-common';
import { upsertIndex, getIndex } from './io';
export type { HierarchicalNSW as HierarchicalNSWT } from 'closevector-hnswlib-node';
export declare class CloseVectorHNSWNode extends CloseVectorSaveableVectorStore {
    FilterType: (doc: CloseVectorDocument) => boolean;
    _index?: HierarchicalNSWT;
    docstore: SynchronousInMemoryDocstore;
    args: CloseVectorHNSWLibBase;
    _uuid?: string;
    accessKey?: string;
    secret?: string;
    _vectorstoreType(): string;
    constructor(embeddings: CloseVectorEmbeddings, args: CloseVectorHNSWLibArgs<HierarchicalNSWT> & {
        accessKey?: string;
        secret?: string;
    });
    addDocuments(documents: CloseVectorDocument[]): Promise<void>;
    private static getHierarchicalNSW;
    private initIndex;
    get index(): HierarchicalNSWT;
    private set index(value);
    get uuid(): string;
    private set uuid(value);
    addVectors(vectors: number[][], documents: CloseVectorDocument[]): Promise<void>;
    similaritySearchVectorWithScore(query: number[], k: number, filter?: this['FilterType']): Promise<[CloseVectorDocument<Record<string, any>>, number][]>;
    delete(params: {
        directory: string;
    }): Promise<void>;
    saveToCloud(options: Omit<Parameters<typeof upsertIndex>[1], 'accessKey' | 'secret'>): Promise<string>;
    save(directory: string): Promise<void>;
    static loadFromCloud(options: Parameters<typeof getIndex>[0]): Promise<CloseVectorHNSWNode>;
    static load(directory: string, embeddings: CloseVectorEmbeddings): Promise<CloseVectorHNSWNode>;
    static fromTexts(texts: string[], metadatas: object[] | object, embeddings: CloseVectorEmbeddings, dbConfig?: {
        docstore?: SynchronousInMemoryDocstore;
    }): Promise<CloseVectorHNSWNode>;
    static fromDocuments(docs: CloseVectorDocument[], embeddings: CloseVectorEmbeddings, dbConfig?: {
        docstore?: SynchronousInMemoryDocstore;
    }): Promise<CloseVectorHNSWNode>;
    static imports(): Promise<{
        HierarchicalNSW: typeof HierarchicalNSWT;
    }>;
}
export declare const HNSWLib: typeof CloseVectorHNSWNode;
